name: "Deploy to S3"
description: "Deploys build to AWS S3"
inputs:
  aws-access-key-id:
    required: true
    description: "The aws-access-key-id used to authenticate with AWS"
  aws-secret-access-key:
    required: true
    description: "The aws-secret-access-key used to authenticate with AWS"
  aws-bucket:
    required: true
    description: "The AWS bucket where to upload build"
  github-token:
    required: true
    description: "The GITHUB_TOKEN needed for adding comments into PRs"
  build-flavour:
    required: true
    description: "The build flavour (dev, staging, internal, beta, prod, fdroid)"
  build-variant:
    required: true
    description: "The build variant (benchmark, compat, compatrelease, debug, release)"
runs:
  using: "composite"
  steps:
    - name: Set APK full path
      id: path
      shell: bash
      run: |
        APK_FULL_PATH_REF="$(set -- app/build/outputs/apk/${{ inputs.build-flavour }}/${{ inputs.build-variant }}/com.wire.*.apk; echo $1)"
        echo "apk_full_path=$APK_FULL_PATH_REF" >> $GITHUB_OUTPUT
        unset APK_FULL_PATH_REF
    - name: Upload to S3 from PR
      if: github.event.pull_request.number != ''
      id: upload
      uses: hkusu/s3-upload-action@v2.1.0
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: 'eu-central-1'
        aws-bucket: ${{ inputs.aws-bucket }}
        destination-dir: "megazord/android/reloaded/${{ inputs.build-flavour }}/${{ inputs.build-variant }}/PR-${{ github.event.pull_request.number }}/"
        file-path: ${{ steps.path.outputs.apk_full_path }}
        output-file-url: 'true'
        public: true
    - name: Upload to S3 from branch
      if: github.event.pull_request.number == ''
      id: upload-from-branch
      uses: hkusu/s3-upload-action@v2.1.0
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: 'eu-central-1'
        aws-bucket: ${{ inputs.aws-bucket }}
        destination-dir: "megazord/android/reloaded/${{ inputs.build-flavour }}/${{ inputs.build-variant }}/"
        file-path: ${{ steps.path.outputs.apk_full_path }}
        output-file-url: 'true'
        public: true
    - name: Show URL
      if: github.event.pull_request.number != ''
      shell: bash
      env:
        EVENT_FILE_PATH: artifacts/Event File/event.json
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        gh pr comment "${{ github.event.pull_request.number }}" --body "Built [wire-android-${{ inputs.build-flavour }}-${{ inputs.build-variant }}-pr-${{ github.event.pull_request.number }}.apk](${{ steps.upload.outputs.file-url }}) is available for download"
    - name: Extract version and version code from APK filename
      shell: bash
      run: |
        # Filename of the APK
        filename=${{ steps.path.outputs.apk_full_path }}
        
        # Extract version name and version code
        version=$(echo "$filename" | sed -E 's/.*-v([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        version_code=$(echo "$filename" | sed -E 's/.*-([0-9]+)-${{ inputs.build-flavour }}-${{ inputs.build-variant }}\.apk/\1/')
        
        # Print the extracted version and version code
        echo "Extracted version: v$version"
        echo "Extracted version code: $version_code"
        
        # set them as environment variables for later use
        echo "VERSION=v$version" >> $GITHUB_ENV
        echo "VERSION_CODE=$version_code" >> $GITHUB_ENV
    - name: Rename mapping file
      if: ${{ inputs.build-variant != 'debug' }}
      shell: bash
      id: mapping
      run: |
        capitalized_variant=$(echo "${{ inputs.build-variant }}" | awk '{print toupper(substr($0,1,1)) tolower(substr($0,2))}')
        echo "Capitalized Variant: $capitalized_variant"
        mapping_full_path="app/build/outputs/mapping/${{ inputs.build-flavour }}${capitalized_variant}/mapping.txt"
        new_mapping_file_name="mapping-$capitalized_variant-${{ env.VERSION }}-${{ env.VERSION_CODE }}.txt"
        mv "$mapping_full_path" "$new_mapping_file_name"
        # Set the new mapping file name as an environment variable
        echo "new_mapping_file_name=$new_mapping_file_name" >> $GITHUB_ENV
    - name: Upload mapping file to S3 from branch
      if: ${{ github.event.pull_request.number == '' && inputs.build-variant != 'debug' }}
      id: upload-mapping-from-branch
      uses: hkusu/s3-upload-action@v2.1.0
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: 'eu-central-1'
        aws-bucket: ${{ inputs.aws-bucket }}
        destination-dir: "megazord/android/reloaded/${{ inputs.build-flavour }}/${{ inputs.build-variant }}/"
        file-path: ${{ env.new_mapping_file_name }}
        output-file-url: 'true'
        public: true
    - name: Upload mapping file to S3 from PR
      if: ${{ github.event.pull_request.number != '' && inputs.build-variant != 'debug' }}
      id: upload-mapping-from-PR
      uses: hkusu/s3-upload-action@v2.1.0
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: 'eu-central-1'
        aws-bucket: ${{ inputs.aws-bucket }}
        destination-dir: "megazord/android/reloaded/${{ inputs.build-flavour }}/${{ inputs.build-variant }}/PR-${{ github.event.pull_request.number }}/"
        file-path: ${{ env.new_mapping_file_name }}
        output-file-url: 'true'
        public: true
