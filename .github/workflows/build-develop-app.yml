name: "Develop build"
on:
  push:
    branches:
      - develop
  merge_group:
    types: [ checks_requested ]
    branches: [ develop ]
  pull_request:
    branches:
      - develop
    types: [ opened, synchronize ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.merge_group.head_sha }}
  cancel-in-progress: true

jobs:
  code-analysis:
    uses: ./.github/workflows/code-analysis.yml
  ui-tests:
    uses: ./.github/workflows/gradle-run-ui-tests.yml
  unit-tests:
    uses: ./.github/workflows/gradle-run-unit-tests.yml
  build-app:
    needs: [ code-analysis, ui-tests, unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive # Needed in order to fetch Kalium sources for building
          fetch-depth: 0
      - name: Set up JDK 17
        uses: buildjet/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Decode debug Keystore
        env:
          ENCODED_STRING: ${{ secrets.ENCODED_KEYSTORE_DEBUG }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/the.keystore
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: build dev flavour
        run:
          ./gradlew app:assembleDevDebug
        env:
          DATADOG_APP_ID: ${{ secrets.DATADOG_APP_ID }}
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          KEYSTORE_FILE_PATH_DEBUG: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_RELEASE: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_COMPAT: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_COMPAT_RELEASE: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_KEY_NAME_DEBUG: ${{ secrets.SIGNING_KEY_ALIAS_DEBUG }}
          KEYPWD_DEBUG: ${{ secrets.SIGNING_KEY_PASSWORD_DEBUG }}
          KEYSTOREPWD_DEBUG: ${{ secrets.SIGNING_STORE_PASSWORD_DEBUG }}
          ENABLE_SIGNING: ${{ secrets.ENABLE_SIGNING }}
      - name: Decode compat Keystore
        env:
          ENCODED_STRING: ${{ secrets.ENCODED_KEYSTORE_INTERNAL_RELEASE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/the.keystore
      - name: build staging flavour
        run:
          ./gradlew app:assembleStagingCompat
        env:
          DATADOG_APP_ID: ${{ secrets.DATADOG_APP_ID }}
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          KEYSTORE_FILE_PATH_DEBUG: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_RELEASE: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_COMPAT: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_FILE_PATH_COMPAT_RELEASE: ${{ vars.KEYSTORE_FILE_PATH }}
          KEYSTORE_KEY_NAME_COMPAT: ${{ secrets.SIGNING_KEY_ALIAS_INTERNAL_RELEASE }}
          KEYPWD_COMPAT: ${{ secrets.SIGNING_KEY_PASSWORD_INTERNAL_RELEASE }}
          KEYSTOREPWD_COMPAT: ${{ secrets.SIGNING_STORE_PASSWORD_INTERNAL_RELEASE }}
          ENABLE_SIGNING: ${{ secrets.ENABLE_SIGNING }}
      - name: Upload
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Build Artifacts
          path: app/build/outputs/
      - name: Deploy StagingCompat to S3
        uses: ./.github/actions/deploy-to-s3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-bucket: ${{ secrets.AWS_S3_BUCKET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-flavour: staging
          build-variant: compat
      - name: Deploy DevDebug to S3
        uses: ./.github/actions/deploy-to-s3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-bucket: ${{ secrets.AWS_S3_BUCKET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-flavour: dev
          build-variant: debug
