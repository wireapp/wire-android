# GitHub Action: Cherry-pick merged PRs to `TARGET_BRANCH`
#
# This action automates the process of cherry-picking merged PRs from `release/candidate` branch to `TARGET_BRANCH`.
# It is triggered whenever a pull request is merged into `release/candidate`.
#
# The action performs the following steps:
# 1. Checkout the merged PR.
# 2. If changes are made outside the specified submodule or no submodule is specified, the action proceeds.
# 3. If a submodule name is provided in the `SUBMODULE_NAME` environment variable:
#    a. The action creates a temporary branch.
#    b. Updates the submodule to its latest version from the target branch.
#    c. Commits the submodule updates.
# 4. Squashes the commit with the commit message of the merged PR (if a submodule was updated).
# 5. Cherry-picks the squashed (or original if no squashing occurred) commit to a new branch based on target.
# 6. If any conflicts arise during the cherry-pick, they are committed.
# 7. The branch with the cherry-picked changes is pushed.
# 8. A new pull request is created against `develop` with the cherry-picked changes.

name: "Cherry-pick from RC to develop"

on:
    pull_request:
        branches:
            - release/candidate
        types:
            - closed

jobs:
    cherry-pick:
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true

        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cherry pick to `develop`
              uses: wireapp/action-auto-cherry-pick@v1.0.0
              with:
                  target-branch: develop
                  submodule-name: kalium
                  pr-title-suffix: üçí
                  labels: cherry-pick
