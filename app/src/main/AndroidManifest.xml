<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Wire
  ~ Copyright (C) 2023 Wire Swiss GmbH
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program. If not, see http://www.gnu.org/licenses/.
  ~
  ~
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        package="com.wire.android"
        android:sharedUserId="${sharedUserId}">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission
            android:name="android.permission.READ_EXTERNAL_STORAGE"
            android:maxSdkVersion="32" />
    <uses-permission
            android:name="android.permission.WRITE_EXTERNAL_STORAGE"
            android:maxSdkVersion="28" />
    <uses-permission
            android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION"
            android:maxSdkVersion="28" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <!-- needed to switch between speaker/earpiece -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />

    <!-- Allows showing incoming call when device is sleeping -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- Needed to specify that we are using OpenGL ES 2.0 API-->
    <uses-feature
            android:glEsVersion="0x00020000"
            android:required="false" />

    <application
            android:name=".WireApplication"
            android:allowBackup="false"
            android:fullBackupContent="false"
            android:hardwareAccelerated="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:requestLegacyExternalStorage="true"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="false"
            android:theme="@style/AppTheme.SplashScreen"
            tools:replace="android:allowBackup,android:supportsRtl"
            >

        <activity
                android:name=".ui.WireActivity"
                android:exported="true"
                android:hardwareAccelerated="true"
                android:launchMode="singleTask"
                android:screenOrientation="portrait"
                android:showOnLockScreen="true"
                android:theme="@style/AppTheme.SplashScreen"
                android:windowSoftInputMode="adjustResize|stateHidden">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                        android:host="access"
                        android:scheme="wire" />

                <data
                        android:host="sso-login"
                        android:scheme="wire" />

                <data
                        android:host="incoming-call"
                        android:scheme="wire" />

                <data
                        android:host="conversation-join"
                        android:scheme="wire" />

                <data
                        android:host="migration-login"
                        android:scheme="wire" />

                <data
                        android:host="conversation"
                        android:scheme="wire" />

                <data
                        android:host="other-user-profile"
                        android:scheme="wire" />

                <data
                        android:host="ongoing-call"
                        android:scheme="wire" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="image/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="video/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="audio/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="application/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="image/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="video/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="audio/*" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="application/*" />
            </intent-filter>
        </activity>

        <provider
                android:name="androidx.startup.InitializationProvider"
                android:authorities="${applicationId}.androidx-startup"
                android:exported="false"
                tools:node="merge">

            <meta-data
                    android:name="androidx.work.WorkManagerInitializer"
                    android:value="androidx.startup"
                    tools:node="remove" />

        </provider>

        <provider
                android:name="androidx.core.content.FileProvider"
                android:authorities="${applicationId}.provider"
                android:exported="false"
                android:grantUriPermissions="true">
            <meta-data
                    android:name="android.support.FILE_PROVIDER_PATHS"
                    android:resource="@xml/provider_paths" />
        </provider>

        <receiver
                android:name=".notification.broadcastreceivers.NotificationReplyReceiver"
                android:exported="false" />
        <receiver
                android:name=".notification.broadcastreceivers.CallNotificationDismissReceiver"
                android:exported="false" />
        <receiver
                android:name=".notification.broadcastreceivers.EndOngoingCallReceiver"
                android:exported="false" />

        <service
                android:name=".services.WireFirebaseMessagingService"
                android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
                android:name=".ui.debug.StartServiceReceiver"
                android:enabled="true"
                android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            </intent-filter>
        </receiver>


        <receiver
                android:name=".migration.UpdateReceiver"
                android:enabled="true"
                android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            </intent-filter>
        </receiver>

        <service
                android:name=".services.PersistentWebSocketService"
                android:exported="false" />

        <service
                android:name=".services.OngoingCallService"
                android:exported="false"
                android:foregroundServiceType="phoneCall" />

        <!-- If you want to disable android.startup completely. -->
        <provider
                android:name="androidx.startup.InitializationProvider"
                android:authorities="${applicationId}.androidx-startup"
                tools:node="remove" />

        <provider
                android:name="com.google.firebase.provider.FirebaseInitProvider"
                android:authorities="${applicationId}.firebaseinitprovider"
                tools:node="remove" />
        <provider
                android:name="androidx.startup.InitializationProvider"
                android:authorities="${applicationId}.androidx-startup"
                android:exported="false"
                tools:node="merge">
            <!-- If you are using androidx.startup to initialize other components -->
            <meta-data
                    android:name="androidx.work.WorkManagerInitializer"
                    android:value="androidx.startup"
                    tools:node="remove" />
        </provider>

    </application>

</manifest>
