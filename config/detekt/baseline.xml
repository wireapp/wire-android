<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>CommentWrapping:DrawingCanvasComponent.kt$/*, bitmap*/</ID>
    <ID>DestructuringDeclarationWithTooManyEntries:AssetMessageTypes.kt$val ( name, icon, size, message ) = createRefs()</ID>
    <ID>DestructuringDeclarationWithTooManyEntries:CallOptionsControls.kt$val (microphoneIcon, microphoneText, cameraIcon, cameraText, speakerIcon, speakerText) = createRefs()</ID>
    <ID>DestructuringDeclarationWithTooManyEntries:ImageAsset.kt$val (conversationIdString, messageId, isSelfAsset, isEphemeral) = split(":")</ID>
    <ID>Filename:WireTextFieldDefaults.kt$com.wire.android.ui.common.textfield.WireTextFieldDefaults.kt</ID>
    <ID>KdocWrapping:AttachmentOptions.kt$/** Nothing to do here when permission is denied once */</ID>
    <ID>KdocWrapping:DownloadedAssetDialog.kt$/** Nothing to do **/</ID>
    <ID>KdocWrapping:MediaGalleryScreen.kt$/** Nothing to do **/</ID>
    <ID>KdocWrapping:RecordAudioComponent.kt$/** Nothing to do **/</ID>
    <ID>NoWildcardImports:ExampleInstrumentedTest.kt$import org.junit.Assert.*</ID>
    <ID>NoWildcardImports:ExampleUnitTest.kt$import org.junit.Assert.*</ID>
    <ID>SpreadOperator:ViewModelScopedPreview.kt$ViewModelScopedPreviewProcessor$(aggregating = true, *items.mapNotNull { it.containingFile }.toTypedArray())</ID>
    <ID>SpreadOperator:ViewModelScopedPreview.kt$ViewModelScopedPreviewProcessor$(aggregating = true, *listOfNotNull(item.containingFile).toTypedArray())</ID>
    <ID>UnusedParameter:ExternalLoggerManager.kt$ExternalLoggerManager$context: Context</ID>
    <ID>UnusedParameter:TrackingNavController.kt$nameFromRoute: (String) -&gt; String?</ID>
    <ID>UnusedPrivateProperty:AndroidExampleView.kt$AndroidExampleView$private val view: View = View(context)</ID>
    <ID>UnusedPrivateProperty:SearchQueryStateFlow.kt$SearchQueryStateFlow$private val coroutineDispatcher: CoroutineDispatcher</ID>
    <ID>UnusedPrivateProperty:WireNotificationManagerTest.kt$WireNotificationManagerTest.Companion$private val TEST_SERVER_CONFIG: ServerConfig = newServerConfig(1)</ID>
  </CurrentIssues>
</SmellBaseline>
